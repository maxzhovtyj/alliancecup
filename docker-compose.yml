version: "3.9"

services:
  client:
    build: ./alliancecup-client
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    stdin_open: true
    tty: true

  server:
    build: ./alliancecup-server
    command: ./alliancecup
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      - DB_PASSWORD=30042003
      - GIN_MODE=release

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - minio_storage:/data
    environment:
      - "MINIO_ACCESS_KEY=minio99"
      - "MINIO_SECRET_KEY=minio123"
    command: server /data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio99 minio123;
      /usr/bin/mc mb myminio/images;
      /usr/bin/mc anonymous set public myminio/images;
      exit 0;
      "
  
  redis:
    restart: always
    image: 'redis:6.2-alpine'
    ports:
      - "6379:6379"
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes: 
      - cache:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5

  db:
    restart: always
    image: postgres:15-alpine
    volumes: 
      - db:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=30042003
    ports:
      - "5436:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  cache:
    driver: local
  db:
    driver: local
  minio_storage: {}